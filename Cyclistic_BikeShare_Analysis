{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/nickalden/cyclistic-bikeshare-analysis?scriptVersionId=192387307\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"d65fa641","metadata":{"papermill":{"duration":0.010116,"end_time":"2024-08-12T20:37:05.152664","exception":false,"start_time":"2024-08-12T20:37:05.142548","status":"completed"},"tags":[]},"source":["# Business Task\n","**Problem Statement:** Use Cyclistic's historical data to analyze how usage differs between casual riders and annual members.  \n","**Goal:** Maximize the number of annual memberships by converting casual riders into annual members.  \n","## Company Overview:\n","### Company:\n","- **Location:**\n","\t - Chicago, IL   \n","- **Inventory:**\n","\t - *Bicycles:* 5,824\n","\t - *Docking Stations:* 692   \n","- **Pricing Plans:**\n","\t - Single-ride Passes (*Casual Rider*)\n","\t - Full-day Passes (*Casual Rider*)\n","\t - Annual Membership (*Annual Member*)"]},{"cell_type":"markdown","id":"faff6f7a","metadata":{"papermill":{"duration":0.009265,"end_time":"2024-08-12T20:37:05.171759","exception":false,"start_time":"2024-08-12T20:37:05.162494","status":"completed"},"tags":[]},"source":["# Description of Data Sources Used:\n","## Cyclisticâ€™s historical trip data\n","Past 12 months (07/2023 - 06/2024)\n","- **Trip data .csv files:** *YYYYMM-divvy-tripdata.csv*\n","\t - 202307_divvy-tripdata.csv\n","\t - 202308_divvy-tripdata.csv\n","\t - 202309_divvy-tripdata.csv\n","\t - 202310_divvy-tripdata.csv\n","\t - 202311_divvy-tripdata.csv\n","\t - 202312_divvy-tripdata.csv\n","\t - 202401_divvy-tripdata.csv\n","\t - 202402_divvy-tripdata.csv\n","\t - 202403_divvy-tripdata.csv\n","\t - 202404_divvy-tripdata.csv\n","\t - 202405_divvy-tripdata.csv\n","\t - 202406_divvy-tripdata.csv   \n","\n","\t\t - *Public data made available by Motivate International Inc.*  \n","\t\t\t - Prohibits use of users *personally identifiable information*.\n","\t\t\t - Limits ability to determine users *home address (relative to service area) and single pass purchase history*.\n"]},{"cell_type":"markdown","id":"4eafece5","metadata":{"papermill":{"duration":0.009227,"end_time":"2024-08-12T20:37:05.190509","exception":false,"start_time":"2024-08-12T20:37:05.181282","status":"completed"},"tags":[]},"source":["## Libraries and Packages"]},{"cell_type":"code","execution_count":1,"id":"679a82fe","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-08-12T20:37:05.211857Z","iopub.status.busy":"2024-08-12T20:37:05.211512Z","iopub.status.idle":"2024-08-12T20:37:06.772028Z","shell.execute_reply":"2024-08-12T20:37:06.771249Z"},"papermill":{"duration":1.573303,"end_time":"2024-08-12T20:37:06.774312","exception":false,"start_time":"2024-08-12T20:37:05.201009","status":"completed"},"tags":[]},"outputs":[],"source":["# Import libraries and packages\n","import pandas as pd\n","import numpy as np\n","from scipy import stats\n","from pandas import DataFrame"]},{"cell_type":"markdown","id":"0ec6a49e","metadata":{"papermill":{"duration":0.009257,"end_time":"2024-08-12T20:37:06.793868","exception":false,"start_time":"2024-08-12T20:37:06.784611","status":"completed"},"tags":[]},"source":["## Datasets"]},{"cell_type":"code","execution_count":2,"id":"873f9e19","metadata":{"execution":{"iopub.execute_input":"2024-08-12T20:37:06.814133Z","iopub.status.busy":"2024-08-12T20:37:06.81347Z","iopub.status.idle":"2024-08-12T20:37:37.136346Z","shell.execute_reply":"2024-08-12T20:37:37.135477Z"},"papermill":{"duration":30.335419,"end_time":"2024-08-12T20:37:37.138656","exception":false,"start_time":"2024-08-12T20:37:06.803237","status":"completed"},"tags":[]},"outputs":[],"source":["# Load datasets\n","trips23_7 = pd.read_csv('/kaggle/input/cyclistic-bikeshare/202307-divvy-tripdata.csv')\n","trips23_8 = pd.read_csv('/kaggle/input/cyclistic-bikeshare/202308-divvy-tripdata.csv')\n","trips23_9 = pd.read_csv('/kaggle/input/cyclistic-bikeshare/202309-divvy-tripdata.csv')\n","trips23_10 = pd.read_csv('/kaggle/input/cyclistic-bikeshare/202310-divvy-tripdata.csv')\n","trips23_11 = pd.read_csv('/kaggle/input/cyclistic-bikeshare/202311-divvy-tripdata.csv')\n","trips23_12 = pd.read_csv('/kaggle/input/cyclistic-bikeshare/202312-divvy-tripdata.csv')\n","trips24_1 = pd.read_csv('/kaggle/input/cyclistic-bikeshare/202401-divvy-tripdata.csv')\n","trips24_2 = pd.read_csv('/kaggle/input/cyclistic-bikeshare/202402-divvy-tripdata.csv')\n","trips24_3 = pd.read_csv('/kaggle/input/cyclistic-bikeshare/202403-divvy-tripdata.csv')\n","trips24_4 = pd.read_csv('/kaggle/input/cyclistic-bikeshare/202404-divvy-tripdata.csv')\n","trips24_5 = pd.read_csv('/kaggle/input/cyclistic-bikeshare/202405-divvy-tripdata.csv')\n","trips24_6 = pd.read_csv('/kaggle/input/cyclistic-bikeshare/202406-divvy-tripdata.csv')"]},{"cell_type":"code","execution_count":3,"id":"ac9ac40b","metadata":{"execution":{"iopub.execute_input":"2024-08-12T20:37:37.160056Z","iopub.status.busy":"2024-08-12T20:37:37.159779Z","iopub.status.idle":"2024-08-12T20:37:37.964328Z","shell.execute_reply":"2024-08-12T20:37:37.963516Z"},"papermill":{"duration":0.817189,"end_time":"2024-08-12T20:37:37.966586","exception":false,"start_time":"2024-08-12T20:37:37.149397","status":"completed"},"tags":[]},"outputs":[],"source":["# Merge datasets\n","trips = pd.concat([trips23_7, trips23_8, trips23_9, trips23_10, trips23_11, trips23_12, \n","                   trips24_1, trips24_2, trips24_3, trips24_4, trips24_5, trips24_6])"]},{"cell_type":"markdown","id":"1b6df4cd","metadata":{"papermill":{"duration":0.009603,"end_time":"2024-08-12T20:37:37.986209","exception":false,"start_time":"2024-08-12T20:37:37.976606","status":"completed"},"tags":[]},"source":["### Data Summary:"]},{"cell_type":"code","execution_count":4,"id":"015d75fd","metadata":{"_kg_hide-input":true,"execution":{"iopub.execute_input":"2024-08-12T20:37:38.006589Z","iopub.status.busy":"2024-08-12T20:37:38.006246Z","iopub.status.idle":"2024-08-12T20:37:42.500836Z","shell.execute_reply":"2024-08-12T20:37:42.499859Z"},"papermill":{"duration":4.507439,"end_time":"2024-08-12T20:37:42.503224","exception":false,"start_time":"2024-08-12T20:37:37.995785","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 5734381 entries, 0 to 710720\n","Data columns (total 13 columns):\n"," #   Column              Non-Null Count    Dtype  \n","---  ------              --------------    -----  \n"," 0   ride_id             5734381 non-null  object \n"," 1   rideable_type       5734381 non-null  object \n"," 2   started_at          5734381 non-null  object \n"," 3   ended_at            5734381 non-null  object \n"," 4   start_station_name  4801378 non-null  object \n"," 5   start_station_id    4801378 non-null  object \n"," 6   end_station_name    4753825 non-null  object \n"," 7   end_station_id      4753825 non-null  object \n"," 8   start_lat           5734381 non-null  float64\n"," 9   start_lng           5734381 non-null  float64\n"," 10  end_lat             5726462 non-null  float64\n"," 11  end_lng             5726462 non-null  float64\n"," 12  member_casual       5734381 non-null  object \n","dtypes: float64(4), object(9)\n","memory usage: 612.5+ MB\n","None\n"]}],"source":["# Data summary\n","print(trips.info(show_counts=True))"]},{"cell_type":"markdown","id":"c3f14fec","metadata":{"papermill":{"duration":0.009692,"end_time":"2024-08-12T20:37:42.523311","exception":false,"start_time":"2024-08-12T20:37:42.513619","status":"completed"},"tags":[]},"source":["#### Sample of Data:"]},{"cell_type":"code","execution_count":5,"id":"dda2cdfe","metadata":{"_kg_hide-input":true,"execution":{"iopub.execute_input":"2024-08-12T20:37:42.543858Z","iopub.status.busy":"2024-08-12T20:37:42.543557Z","iopub.status.idle":"2024-08-12T20:37:42.732932Z","shell.execute_reply":"2024-08-12T20:37:42.732112Z"},"papermill":{"duration":0.202309,"end_time":"2024-08-12T20:37:42.735363","exception":false,"start_time":"2024-08-12T20:37:42.533054","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["                 ride_id  rideable_type               started_at  \\\n","76341   67B90F0F5DC479ED   classic_bike      2023-10-26 16:24:59   \n","602453  883BE9FC160158BB  electric_bike      2024-05-19 02:46:30   \n","97391   C66C6BC5C622E9F1  electric_bike      2023-12-30 19:40:01   \n","385293  DB50FB9C282FF605  electric_bike      2024-05-20 10:31:31   \n","557336  86B52141A5BCFDC4   classic_bike      2023-08-07 17:50:42   \n","244832  03DCEB590E9AD511   classic_bike      2023-08-29 10:20:45   \n","276550  5BFAF10C8F3E1CEF  electric_bike      2023-09-21 18:28:34   \n","398932  105202473540C167   classic_bike      2023-08-01 17:18:49   \n","149772  B49B820C151D5430  electric_bike      2023-11-14 06:59:41   \n","426621  79DEE5B8166175D1  electric_bike  2024-06-21 13:42:26.216   \n","\n","                       ended_at           start_station_name start_station_id  \\\n","76341       2023-10-26 16:38:30    Aberdeen St & Randolph St            18062   \n","602453      2024-05-19 02:57:03  Halsted St & Wrightwood Ave     TA1309000061   \n","97391       2023-12-30 19:44:17                          NaN              NaN   \n","385293      2024-05-20 10:37:26     Western Ave & Leland Ave     TA1307000140   \n","557336      2023-08-07 17:55:38    Sedgwick St & Webster Ave            13191   \n","244832      2023-08-29 10:51:30         State St & Kinzie St            13050   \n","276550      2023-09-21 18:34:07    Clark St & Wrightwood Ave     TA1305000014   \n","398932      2023-08-01 17:31:41      Canal St & Jackson Blvd            13138   \n","149772      2023-11-14 07:10:31                          NaN              NaN   \n","426621  2024-06-21 14:15:07.019                          NaN              NaN   \n","\n","                      end_station_name end_station_id  start_lat  start_lng  \\\n","76341                Clark St & Elm St   TA1307000039  41.884114 -87.654264   \n","602453                             NaN            NaN  41.929183 -87.649194   \n","97391        Hampden Ct & Diversey Ave       202480.0  41.940000 -87.650000   \n","385293          Damen Ave & Foster Ave   KA1504000149  41.966414 -87.688650   \n","557336           Wells St & Concord Ln   TA1308000050  41.922167 -87.638888   \n","244832         Streeter Dr & Grand Ave          13022  41.889375 -87.627077   \n","276550  Southport Ave & Wrightwood Ave   TA1307000113  41.929641 -87.643248   \n","398932          Kingsbury St & Erie St          13265  41.877245 -87.639366   \n","149772      Larrabee St & Menomonee St   TA1306000007  41.940000 -87.670000   \n","426621                             NaN            NaN  41.930000 -87.650000   \n","\n","          end_lat    end_lng member_casual  \n","76341   41.902973 -87.631280        member  \n","602453  41.940000 -87.640000        casual  \n","97391   41.932559 -87.642385        member  \n","385293  41.975615 -87.679459        member  \n","557336  41.912133 -87.634656        member  \n","244832  41.892278 -87.612043        casual  \n","276550  41.928773 -87.663913        casual  \n","398932  41.893808 -87.641697        member  \n","149772  41.914680 -87.643320        member  \n","426621  41.880000 -87.630000        casual  \n"]}],"source":["print(trips.sample(10))"]},{"cell_type":"markdown","id":"b051f33a","metadata":{"papermill":{"duration":0.009765,"end_time":"2024-08-12T20:37:42.755136","exception":false,"start_time":"2024-08-12T20:37:42.745371","status":"completed"},"tags":[]},"source":["#### Proportions of Total Trips:"]},{"cell_type":"code","execution_count":6,"id":"831cf22b","metadata":{"_kg_hide-input":true,"execution":{"iopub.execute_input":"2024-08-12T20:37:42.77574Z","iopub.status.busy":"2024-08-12T20:37:42.775428Z","iopub.status.idle":"2024-08-12T20:37:44.524568Z","shell.execute_reply":"2024-08-12T20:37:44.523466Z"},"papermill":{"duration":1.761765,"end_time":"2024-08-12T20:37:44.526595","exception":false,"start_time":"2024-08-12T20:37:42.76483","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["By User Type:\n","\n","member_casual\n","member    0.642614\n","casual    0.357386\n","Name: proportion, dtype: float64\n","\n","By Bike Type:\n","\n","rideable_type\n","classic_bike     0.497681\n","electric_bike    0.496323\n","docked_bike      0.005996\n","Name: proportion, dtype: float64\n"]}],"source":["print('By User Type:\\n')\n","print(trips['member_casual'].value_counts(normalize=True))\n","print('\\nBy Bike Type:\\n')\n","print(trips['rideable_type'].value_counts(normalize=True))"]},{"cell_type":"markdown","id":"09b8522d","metadata":{"papermill":{"duration":0.009879,"end_time":"2024-08-12T20:37:44.546672","exception":false,"start_time":"2024-08-12T20:37:44.536793","status":"completed"},"tags":[]},"source":["# Documentation for Data Cleaning and Manipulation:"]},{"cell_type":"code","execution_count":7,"id":"a70a81b2","metadata":{"execution":{"iopub.execute_input":"2024-08-12T20:37:44.568401Z","iopub.status.busy":"2024-08-12T20:37:44.56779Z","iopub.status.idle":"2024-08-12T20:37:48.404699Z","shell.execute_reply":"2024-08-12T20:37:48.403864Z"},"papermill":{"duration":3.850273,"end_time":"2024-08-12T20:37:48.407015","exception":false,"start_time":"2024-08-12T20:37:44.556742","status":"completed"},"tags":[]},"outputs":[],"source":["# Data cleaning and manipulation - Converting data types\n","## Converting datetime data\n","trips['started_at'] = pd.to_datetime(trips['started_at'], exact=False)\n","trips['ended_at'] = pd.to_datetime(trips['ended_at'], exact=False)"]},{"cell_type":"code","execution_count":8,"id":"6557f727","metadata":{"execution":{"iopub.execute_input":"2024-08-12T20:37:48.428346Z","iopub.status.busy":"2024-08-12T20:37:48.428051Z","iopub.status.idle":"2024-08-12T20:38:18.672158Z","shell.execute_reply":"2024-08-12T20:38:18.671384Z"},"papermill":{"duration":30.257139,"end_time":"2024-08-12T20:38:18.67446","exception":false,"start_time":"2024-08-12T20:37:48.417321","status":"completed"},"tags":[]},"outputs":[],"source":["# Data cleaning and manipulation - Adding new variables\n","## Adding trip duration (in minutes)\n","trips['duration'] = (trips['ended_at'] - trips['started_at']).dt.total_seconds()/60\n","\n","## Adding month, year, and weekday variables\n","trips['month'] = trips['started_at'].dt.month\n","trips['year'] = trips['started_at'].dt.year\n","trips['weekday'] = trips['started_at'].dt.weekday\n","\n","## Adding hour variable\n","trips['hour'] = trips['started_at'].dt.hour\n","\n","## Adding (bool) weekend variable\n","trips['weekend'] = trips['weekday'] > 3\n","\n","## Adding trips that start and end at same station\n","trips['single_station'] = trips['start_station_name'] == trips['end_station_name']\n","\n","## Adding season variable\n","def get_season(x):\n","    if (x.month, x.day) < (3,20) or (x.month, x.day) > (12,20): \n","        return 'winter'\n","    elif (x.month,x.day) < (6,21): \n","        return 'spring'\n","    elif (x.month,x.day) < (9,23):     \n","        return 'summer'\n","    else: return 'fall'\n","trips['season'] = trips['started_at'].apply(get_season)\n","\n","## Adding time_of_day variable\n","def get_time_of_day(x):\n","    if (x.hour > 4) and (x.hour < 10): \n","        return 'morning'\n","    elif (x.hour < 16): \n","        return 'afternoon'\n","    elif (x.hour < 22):     \n","        return 'evening'\n","    else: return 'night'\n","trips['time_of_day'] = trips['started_at'].apply(get_time_of_day)"]},{"cell_type":"code","execution_count":9,"id":"5fa98952","metadata":{"execution":{"iopub.execute_input":"2024-08-12T20:38:18.695755Z","iopub.status.busy":"2024-08-12T20:38:18.695484Z","iopub.status.idle":"2024-08-12T20:38:19.184512Z","shell.execute_reply":"2024-08-12T20:38:19.183702Z"},"papermill":{"duration":0.501763,"end_time":"2024-08-12T20:38:19.186457","exception":false,"start_time":"2024-08-12T20:38:18.684694","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["start_station_id\n","False    0.837297\n","True     0.162703\n","Name: proportion, dtype: float64"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["trips['start_station_id'].isnull().value_counts(normalize=True)"]},{"cell_type":"code","execution_count":10,"id":"033c1ea9","metadata":{"execution":{"iopub.execute_input":"2024-08-12T20:38:19.208464Z","iopub.status.busy":"2024-08-12T20:38:19.208189Z","iopub.status.idle":"2024-08-12T20:38:27.310241Z","shell.execute_reply":"2024-08-12T20:38:27.30944Z"},"papermill":{"duration":8.115309,"end_time":"2024-08-12T20:38:27.31258","exception":false,"start_time":"2024-08-12T20:38:19.197271","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Total trips (%) with null start station id values:\n","\n","start_station_id\n","False    0.837297\n","True     0.162703\n","Name: proportion, dtype: float64\n","\n","Proportion of null start station id values by user type:\n","\n","member_casual\n","member    0.631312\n","casual    0.368688\n","Name: proportion, dtype: float64\n","\n","Total trips (%) with null end station id values:\n","\n","end_station_id\n","False    0.829004\n","True     0.170996\n","Name: proportion, dtype: float64\n","\n","Proportion of null end station id values by user type:\n","\n","member_casual\n","member    0.596292\n","casual    0.403708\n","Name: proportion, dtype: float64\n"]}],"source":["# Data cleaning and manipulation - Addressing null values\n","## Summarizing null values\n","print('Total trips (%) with null start station id values:\\n')\n","print(trips['start_station_id'].isnull().value_counts(normalize=True))\n","\n","print('\\nProportion of null start station id values by user type:\\n')\n","print(trips.loc[trips['start_station_id'].isnull()].value_counts('member_casual', normalize=True))\n","\n","print('\\nTotal trips (%) with null end station id values:\\n')\n","print(trips['end_station_id'].isnull().value_counts(normalize=True))\n","\n","print('\\nProportion of null end station id values by user type:\\n')\n","print(trips.loc[trips['end_station_id'].isnull()].value_counts('member_casual', normalize=True))\n","\n","## Removing null values\n","trips.dropna(inplace=True)"]},{"cell_type":"markdown","id":"4eb3ef16","metadata":{"papermill":{"duration":0.009963,"end_time":"2024-08-12T20:38:27.333311","exception":false,"start_time":"2024-08-12T20:38:27.323348","status":"completed"},"tags":[]},"source":["## Updated Data Summary:"]},{"cell_type":"code","execution_count":11,"id":"5cb0696d","metadata":{"_kg_hide-input":true,"execution":{"iopub.execute_input":"2024-08-12T20:38:27.354883Z","iopub.status.busy":"2024-08-12T20:38:27.354588Z","iopub.status.idle":"2024-08-12T20:38:30.885351Z","shell.execute_reply":"2024-08-12T20:38:30.88439Z"},"papermill":{"duration":3.54428,"end_time":"2024-08-12T20:38:30.887697","exception":false,"start_time":"2024-08-12T20:38:27.343417","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 4274348 entries, 0 to 710716\n","Data columns (total 22 columns):\n"," #   Column              Non-Null Count    Dtype         \n","---  ------              --------------    -----         \n"," 0   ride_id             4274348 non-null  object        \n"," 1   rideable_type       4274348 non-null  object        \n"," 2   started_at          4274348 non-null  datetime64[ns]\n"," 3   ended_at            4274348 non-null  datetime64[ns]\n"," 4   start_station_name  4274348 non-null  object        \n"," 5   start_station_id    4274348 non-null  object        \n"," 6   end_station_name    4274348 non-null  object        \n"," 7   end_station_id      4274348 non-null  object        \n"," 8   start_lat           4274348 non-null  float64       \n"," 9   start_lng           4274348 non-null  float64       \n"," 10  end_lat             4274348 non-null  float64       \n"," 11  end_lng             4274348 non-null  float64       \n"," 12  member_casual       4274348 non-null  object        \n"," 13  duration            4274348 non-null  float64       \n"," 14  month               4274348 non-null  int32         \n"," 15  year                4274348 non-null  int32         \n"," 16  weekday             4274348 non-null  int32         \n"," 17  hour                4274348 non-null  int32         \n"," 18  weekend             4274348 non-null  bool          \n"," 19  single_station      4274348 non-null  bool          \n"," 20  season              4274348 non-null  object        \n"," 21  time_of_day         4274348 non-null  object        \n","dtypes: bool(2), datetime64[ns](2), float64(5), int32(4), object(9)\n","memory usage: 627.8+ MB\n","None\n"]}],"source":["# Data summary\n","print(trips.info(show_counts=True))"]},{"cell_type":"markdown","id":"c26f060f","metadata":{"papermill":{"duration":0.010155,"end_time":"2024-08-12T20:38:30.908712","exception":false,"start_time":"2024-08-12T20:38:30.898557","status":"completed"},"tags":[]},"source":["### Proportions of Total Trips:"]},{"cell_type":"code","execution_count":12,"id":"031c1905","metadata":{"_kg_hide-input":true,"execution":{"iopub.execute_input":"2024-08-12T20:38:30.931326Z","iopub.status.busy":"2024-08-12T20:38:30.930736Z","iopub.status.idle":"2024-08-12T20:38:32.236195Z","shell.execute_reply":"2024-08-12T20:38:32.235123Z"},"papermill":{"duration":1.319224,"end_time":"2024-08-12T20:38:32.238361","exception":false,"start_time":"2024-08-12T20:38:30.919137","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["By User Type:\n","\n","member_casual\n","member    0.648205\n","casual    0.351795\n","Name: proportion, dtype: float64\n","\n","By Bike Type:\n","\n","rideable_type\n","classic_bike     0.665975\n","electric_bike    0.326234\n","docked_bike      0.007791\n","Name: proportion, dtype: float64\n"]}],"source":["print('By User Type:\\n')\n","print(trips['member_casual'].value_counts(normalize=True))\n","print('\\nBy Bike Type:\\n')\n","print(trips['rideable_type'].value_counts(normalize=True))"]},{"cell_type":"markdown","id":"e1c095c3","metadata":{"papermill":{"duration":0.010224,"end_time":"2024-08-12T20:38:32.259841","exception":false,"start_time":"2024-08-12T20:38:32.249617","status":"completed"},"tags":[]},"source":["# Summary of Data Analysis:\n","## Quick observations:\n","### Trips with negative duration:"]},{"cell_type":"code","execution_count":13,"id":"a143e437","metadata":{"_kg_hide-input":true,"_kg_hide-output":false,"execution":{"iopub.execute_input":"2024-08-12T20:38:32.282435Z","iopub.status.busy":"2024-08-12T20:38:32.281673Z","iopub.status.idle":"2024-08-12T20:38:32.973836Z","shell.execute_reply":"2024-08-12T20:38:32.972589Z"},"papermill":{"duration":0.70609,"end_time":"2024-08-12T20:38:32.976288","exception":false,"start_time":"2024-08-12T20:38:32.270198","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Total number of trips displaying a negative duration:\n","\n","duration\n","False    4274279\n","True          69\n","Name: count, dtype: int64\n","\n","Total number of negative duration trips by user type:\n","\n","member_casual\n","casual    38\n","member    31\n","Name: count, dtype: int64\n","\n","Proportion of negative duration trips by user type:\n","\n","member_casual\n","casual    0.550725\n","member    0.449275\n","Name: proportion, dtype: float64\n","\n","Proportion of total trips by user type\n","\n","member_casual\n","member    0.648205\n","casual    0.351795\n","Name: proportion, dtype: float64\n"]}],"source":["# Analysis\n","## Quick observations\n","### Trips with negative duration\n","print('Total number of trips displaying a negative duration:\\n')\n","print((trips['duration']<0).value_counts()) \n","\n","print('\\nTotal number of negative duration trips by user type:\\n')\n","print(trips.loc[trips['duration']<0].value_counts('member_casual'))\n","\n","print('\\nProportion of negative duration trips by user type:\\n')\n","print(trips.loc[trips['duration']<0].value_counts('member_casual', normalize=True))\n","\n","print('\\nProportion of total trips by user type\\n')\n","print(trips['member_casual'].value_counts(normalize=True))"]},{"cell_type":"markdown","id":"d4e2de61","metadata":{"papermill":{"duration":0.010519,"end_time":"2024-08-12T20:38:32.997802","exception":false,"start_time":"2024-08-12T20:38:32.987283","status":"completed"},"tags":[]},"source":["### Trips longer than 90 minutes:"]},{"cell_type":"code","execution_count":14,"id":"e61f4ae3","metadata":{"_kg_hide-input":true,"execution":{"iopub.execute_input":"2024-08-12T20:38:33.020776Z","iopub.status.busy":"2024-08-12T20:38:33.020112Z","iopub.status.idle":"2024-08-12T20:38:33.218449Z","shell.execute_reply":"2024-08-12T20:38:33.217533Z"},"papermill":{"duration":0.212401,"end_time":"2024-08-12T20:38:33.22087","exception":false,"start_time":"2024-08-12T20:38:33.008469","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Total number of trips lasting more than 90 minutes:\n","\n","duration\n","False    4217961\n","True       56387\n","Name: count, dtype: int64\n","\n","Proportion of total trips lasting more than 90 minutes:\n","\n","duration\n","False    0.986808\n","True     0.013192\n","Name: proportion, dtype: float64\n","\n","Total number of trips longer than 90 minutes by user type:\n","\n","member_casual\n","casual    49098\n","member     7289\n","Name: count, dtype: int64\n","\n","Proportion of trips longer than 90 minutes by user type:\n","\n","member_casual\n","casual    0.870733\n","member    0.129267\n","Name: proportion, dtype: float64\n"]}],"source":["# Analysis\n","## Quick observations\n","### Trips longer than 1.5 hrs\n","print('Total number of trips lasting more than 90 minutes:\\n')\n","print((trips['duration']>90).value_counts())\n","\n","print('\\nProportion of total trips lasting more than 90 minutes:\\n')\n","print((trips['duration']>90).value_counts(normalize=True))\n","\n","print('\\nTotal number of trips longer than 90 minutes by user type:\\n')\n","print(trips.loc[trips['duration']>90].value_counts('member_casual'))\n","\n","print('\\nProportion of trips longer than 90 minutes by user type:\\n')\n","print(trips.loc[trips['duration']>90].value_counts('member_casual', normalize=True))"]},{"cell_type":"markdown","id":"85c1546b","metadata":{"papermill":{"duration":0.010672,"end_time":"2024-08-12T20:38:33.24351","exception":false,"start_time":"2024-08-12T20:38:33.232838","status":"completed"},"tags":[]},"source":["### Values not categorizing correctly:"]},{"cell_type":"code","execution_count":15,"id":"5420d134","metadata":{"_kg_hide-input":true,"execution":{"iopub.execute_input":"2024-08-12T20:38:33.266644Z","iopub.status.busy":"2024-08-12T20:38:33.265846Z","iopub.status.idle":"2024-08-12T20:38:34.862836Z","shell.execute_reply":"2024-08-12T20:38:34.861949Z"},"papermill":{"duration":1.610482,"end_time":"2024-08-12T20:38:34.864853","exception":false,"start_time":"2024-08-12T20:38:33.254371","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>start_station_id</th>\n","      <th>start_station_name</th>\n","      <th>start_lat</th>\n","      <th>start_lng</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1498</th>\n","      <td>13323</td>\n","      <td>Broadway &amp; Sheridan Rd</td>\n","      <td>41.952868</td>\n","      <td>-87.650043</td>\n","    </tr>\n","    <tr>\n","      <th>1498</th>\n","      <td>TA1306000003</td>\n","      <td>Desplaines St &amp; Kinzie St</td>\n","      <td>41.888533</td>\n","      <td>-87.644362</td>\n","    </tr>\n","    <tr>\n","      <th>1498</th>\n","      <td>SL-009</td>\n","      <td>Clark St &amp; 9th St (AMLI)</td>\n","      <td>41.870813</td>\n","      <td>-87.631124</td>\n","    </tr>\n","    <tr>\n","      <th>1498</th>\n","      <td>22002</td>\n","      <td>Woodlawn Ave &amp; 58th St</td>\n","      <td>41.789381</td>\n","      <td>-87.596479</td>\n","    </tr>\n","    <tr>\n","      <th>1498</th>\n","      <td>TA1307000130</td>\n","      <td>Morgan St &amp; Polk St</td>\n","      <td>41.871737</td>\n","      <td>-87.651030</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1599</th>\n","      <td>13224</td>\n","      <td>Ashland Ave &amp; Blackhawk St</td>\n","      <td>41.907086</td>\n","      <td>-87.667328</td>\n","    </tr>\n","    <tr>\n","      <th>1599</th>\n","      <td>TA1308000029</td>\n","      <td>Stetson Ave &amp; South Water St</td>\n","      <td>41.886835</td>\n","      <td>-87.622320</td>\n","    </tr>\n","    <tr>\n","      <th>1599</th>\n","      <td>15650</td>\n","      <td>Spaulding Ave &amp; Armitage Ave</td>\n","      <td>41.917108</td>\n","      <td>-87.710221</td>\n","    </tr>\n","    <tr>\n","      <th>1599</th>\n","      <td>13319</td>\n","      <td>Ashland Ave &amp; Grace St</td>\n","      <td>41.950687</td>\n","      <td>-87.668700</td>\n","    </tr>\n","    <tr>\n","      <th>1599</th>\n","      <td>TA1305000011</td>\n","      <td>Michigan Ave &amp; Lake St</td>\n","      <td>41.885958</td>\n","      <td>-87.624472</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>919 rows Ã— 4 columns</p>\n","</div>"],"text/plain":["     start_station_id            start_station_name  start_lat  start_lng\n","1498            13323        Broadway & Sheridan Rd  41.952868 -87.650043\n","1498     TA1306000003     Desplaines St & Kinzie St  41.888533 -87.644362\n","1498           SL-009      Clark St & 9th St (AMLI)  41.870813 -87.631124\n","1498            22002        Woodlawn Ave & 58th St  41.789381 -87.596479\n","1498     TA1307000130           Morgan St & Polk St  41.871737 -87.651030\n","...               ...                           ...        ...        ...\n","1599            13224    Ashland Ave & Blackhawk St  41.907086 -87.667328\n","1599     TA1308000029  Stetson Ave & South Water St  41.886835 -87.622320\n","1599            15650  Spaulding Ave & Armitage Ave  41.917108 -87.710221\n","1599            13319        Ashland Ave & Grace St  41.950687 -87.668700\n","1599     TA1305000011        Michigan Ave & Lake St  41.885958 -87.624472\n","\n","[919 rows x 4 columns]"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["# Analysis\n","## Quick observations\n","### Some values not categorizing correctly\n","trips[['start_station_id', 'start_station_name', 'start_lat', 'start_lng']].loc[\n","        np.where(trips['start_station_id'].value_counts()==1)].groupby('start_station_id').head(50)"]},{"cell_type":"markdown","id":"63b3b7dd","metadata":{"papermill":{"duration":0.011122,"end_time":"2024-08-12T20:38:34.887486","exception":false,"start_time":"2024-08-12T20:38:34.876364","status":"completed"},"tags":[]},"source":["## Analysis and removal of outliers:\n"]},{"cell_type":"code","execution_count":16,"id":"59a13c2b","metadata":{"_kg_hide-input":true,"execution":{"iopub.execute_input":"2024-08-12T20:38:34.910845Z","iopub.status.busy":"2024-08-12T20:38:34.910539Z","iopub.status.idle":"2024-08-12T20:38:35.871085Z","shell.execute_reply":"2024-08-12T20:38:35.870329Z"},"papermill":{"duration":0.97494,"end_time":"2024-08-12T20:38:35.873464","exception":false,"start_time":"2024-08-12T20:38:34.898524","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Proportion of outliers by user type:\n","\n","member_casual\n","casual    0.822395\n","member    0.177605\n","Name: proportion, dtype: float64\n","\n","Proportion of outliers by ride type:\n","\n","rideable_type\n","classic_bike     0.847173\n","docked_bike      0.098775\n","electric_bike    0.054051\n","Name: proportion, dtype: float64\n","\n","Proportion of outliers on weekend days:\n","\n","weekend\n","True     0.565292\n","False    0.434708\n","Name: proportion, dtype: float64\n","\n","Proportion of outliers by time of day:\n","\n","time_of_day\n","afternoon    0.530948\n","evening      0.292978\n","morning      0.137951\n","night        0.038123\n","Name: proportion, dtype: float64\n"]}],"source":["# Analysis and removal of outliers\n","outs = trips[np.abs(stats.zscore(trips['duration']))>3.5]\n","\n","print('Proportion of outliers by user type:\\n')\n","print(outs.value_counts('member_casual', normalize=True))\n","\n","print('\\nProportion of outliers by ride type:\\n')\n","print(outs.value_counts('rideable_type', normalize=True))\n","\n","print('\\nProportion of outliers on weekend days:\\n')\n","print(outs.value_counts('weekend', normalize=True))\n","\n","print('\\nProportion of outliers by time of day:\\n')\n","print(outs.value_counts('time_of_day', normalize=True))\n","\n","trips_clean = trips[np.abs(stats.zscore(trips['duration']))<3.5]"]},{"cell_type":"markdown","id":"2992671a","metadata":{"papermill":{"duration":0.010973,"end_time":"2024-08-12T20:38:35.896266","exception":false,"start_time":"2024-08-12T20:38:35.885293","status":"completed"},"tags":[]},"source":["## Summary after removing outliers:"]},{"cell_type":"code","execution_count":17,"id":"82365552","metadata":{"_kg_hide-input":true,"execution":{"iopub.execute_input":"2024-08-12T20:38:35.919976Z","iopub.status.busy":"2024-08-12T20:38:35.919639Z","iopub.status.idle":"2024-08-12T20:38:38.25289Z","shell.execute_reply":"2024-08-12T20:38:38.25177Z"},"papermill":{"duration":2.347784,"end_time":"2024-08-12T20:38:38.255112","exception":false,"start_time":"2024-08-12T20:38:35.907328","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Proportion of total trips by user type:\n","\n","member_casual\n","member    0.650518\n","casual    0.349482\n","Name: proportion, dtype: float64\n","\n","Proportion of total trips by  bike type:\n","\n","rideable_type\n","classic_bike     0.665084\n","electric_bike    0.327572\n","docked_bike      0.007344\n","Name: proportion, dtype: float64\n","\n","Proportion of total trips using a single station:\n","\n","single_station\n","False    0.939533\n","True     0.060467\n","Name: proportion, dtype: float64\n","\n","Proportion of total trips on weekend days:\n","\n","weekend\n","False    0.569577\n","True     0.430423\n","Name: proportion, dtype: float64\n","\n","Proportion of total trips by season:\n","\n","season\n","summer    0.396589\n","spring    0.267601\n","fall      0.221605\n","winter    0.114205\n","Name: proportion, dtype: float64\n","\n","Proportion of total trips by time of day:\n","\n","time_of_day\n","evening      0.410391\n","afternoon    0.372324\n","morning      0.176840\n","night        0.040444\n","Name: proportion, dtype: float64\n","\n","Mean trip duration in minutes:\n","\n","14.83985047482329\n"]}],"source":["# Analysis after removing outliers\n","## Summary after removing outliers\n","print('Proportion of total trips by user type:\\n')\n","print(trips_clean['member_casual'].value_counts(normalize=True))\n","\n","print('\\nProportion of total trips by  bike type:\\n')\n","print(trips_clean['rideable_type'].value_counts(normalize=True))\n","\n","print('\\nProportion of total trips using a single station:\\n')\n","print(trips_clean['single_station'].value_counts(normalize=True))\n","\n","print('\\nProportion of total trips on weekend days:\\n')\n","print(trips_clean['weekend'].value_counts(normalize=True))\n","\n","print('\\nProportion of total trips by season:\\n')\n","print(trips_clean['season'].value_counts(normalize=True))\n","\n","print('\\nProportion of total trips by time of day:\\n')\n","print(trips_clean['time_of_day'].value_counts(normalize=True))\n","\n","print('\\nMean trip duration in minutes:\\n')\n","print(trips_clean['duration'].mean())"]},{"cell_type":"markdown","id":"875adc45","metadata":{"papermill":{"duration":0.012146,"end_time":"2024-08-12T20:38:38.279193","exception":false,"start_time":"2024-08-12T20:38:38.267047","status":"completed"},"tags":[]},"source":["## Analysis after removing outliers:\n","### Grouped by User Type:"]},{"cell_type":"code","execution_count":18,"id":"ff9de5fc","metadata":{"execution":{"iopub.execute_input":"2024-08-12T20:38:38.303788Z","iopub.status.busy":"2024-08-12T20:38:38.303469Z","iopub.status.idle":"2024-08-12T20:38:42.245488Z","shell.execute_reply":"2024-08-12T20:38:42.243973Z"},"papermill":{"duration":3.956968,"end_time":"2024-08-12T20:38:42.247732","exception":false,"start_time":"2024-08-12T20:38:38.290764","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Percentage of total trips using single station:\n","\n","member_casual\n","casual    0.097573\n","member    0.040533\n","Name: single_station, dtype: float64\n","\n","Average trip duration in minutes:\n","\n","member_casual\n","casual    20.341230\n","member    11.884307\n","Name: duration, dtype: float64\n","\n","Percentage of total trips on weekend days:\n","\n","member_casual\n","casual    0.526916\n","member    0.378584\n","Name: weekend, dtype: float64\n","\n","Proportion of total trips by bike type:\n","\n","member_casual  rideable_type\n","casual         classic_bike     0.635269\n","               electric_bike    0.343716\n","               docked_bike      0.021014\n","member         classic_bike     0.681102\n","               electric_bike    0.318898\n","Name: proportion, dtype: float64\n","\n","Proportion of total trips by season:\n","\n","member_casual  season\n","casual         summer    0.464612\n","               spring    0.274861\n","               fall      0.188158\n","               winter    0.072369\n","member         summer    0.360044\n","               spring    0.263701\n","               fall      0.239574\n","               winter    0.136681\n","Name: proportion, dtype: float64\n","\n","Proportion of total trips by time of day:\n","\n","member_casual  time_of_day\n","casual         afternoon      0.427650\n","               evening        0.407588\n","               morning        0.112668\n","               night          0.052095\n","member         evening        0.411897\n","               afternoon      0.342602\n","               morning        0.211316\n","               night          0.034185\n","Name: proportion, dtype: float64\n"]}],"source":["# Analysis after removing outliers\n","## Grouped by member_casual\n","print('Percentage of total trips using single station:\\n')\n","print(trips_clean.groupby('member_casual')['single_station'].mean())\n","\n","print('\\nAverage trip duration in minutes:\\n')\n","print(trips_clean.groupby('member_casual')['duration'].mean())\n","\n","print('\\nPercentage of total trips on weekend days:\\n')\n","print(trips_clean.groupby('member_casual')['weekend'].mean())\n","\n","print('\\nProportion of total trips by bike type:\\n')\n","print(trips_clean.groupby('member_casual')['rideable_type'].value_counts(normalize=True))\n","\n","print('\\nProportion of total trips by season:\\n')\n","print(trips_clean.groupby('member_casual')['season'].value_counts(normalize=True))\n","\n","print('\\nProportion of total trips by time of day:\\n')\n","print(trips_clean.groupby('member_casual')['time_of_day'].value_counts(normalize=True))"]},{"cell_type":"markdown","id":"ec286b82","metadata":{"papermill":{"duration":0.011797,"end_time":"2024-08-12T20:38:42.272319","exception":false,"start_time":"2024-08-12T20:38:42.260522","status":"completed"},"tags":[]},"source":["### Analysis of weekend trips:"]},{"cell_type":"code","execution_count":19,"id":"2304d570","metadata":{"_kg_hide-input":true,"execution":{"iopub.execute_input":"2024-08-12T20:38:42.297639Z","iopub.status.busy":"2024-08-12T20:38:42.297334Z","iopub.status.idle":"2024-08-12T20:38:44.084049Z","shell.execute_reply":"2024-08-12T20:38:44.082847Z"},"papermill":{"duration":1.801835,"end_time":"2024-08-12T20:38:44.086132","exception":false,"start_time":"2024-08-12T20:38:42.284297","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Percentage of total trips using single station:\n","\n","member_casual\n","casual    0.104957\n","member    0.046489\n","Name: single_station, dtype: float64\n","\n","Average trip duration in minutes:\n","\n","member_casual\n","casual    22.214624\n","member    12.680272\n","Name: duration, dtype: float64\n","\n","Proportion of weekend trips by bike type:\n","\n","member_casual  rideable_type\n","casual         classic_bike     0.660927\n","               electric_bike    0.317121\n","               docked_bike      0.021952\n","member         classic_bike     0.692702\n","               electric_bike    0.307298\n","Name: proportion, dtype: float64\n","\n","Proportion of weekend trips by time of day:\n","\n","member_casual  time_of_day\n","casual         afternoon      0.497840\n","               evening        0.359108\n","               morning        0.088954\n","               night          0.054098\n","member         afternoon      0.442509\n","               evening        0.362010\n","               morning        0.153879\n","               night          0.041602\n","Name: proportion, dtype: float64\n","\n","Proportion of weekend trips by season:\n","\n","member_casual  season\n","casual         summer    0.480688\n","               spring    0.273161\n","               fall      0.183013\n","               winter    0.063137\n","member         summer    0.389564\n","               spring    0.259313\n","               fall      0.230752\n","               winter    0.120371\n","Name: proportion, dtype: float64\n"]}],"source":["# Analysis after removing outliers\n","## Creating dataframe of weekend trips for analysis\n","wknd_trips = trips_clean.loc[trips_clean['weekend']==True]\n","\n","## Analysis of weekend trips\n","print('Percentage of total trips using single station:\\n')\n","print(wknd_trips.groupby(['member_casual'])['single_station'].mean())\n","\n","print('\\nAverage trip duration in minutes:\\n')\n","print(wknd_trips.groupby(['member_casual'])['duration'].mean())\n","\n","print('\\nProportion of weekend trips by bike type:\\n')\n","print(wknd_trips.groupby(['member_casual'])['rideable_type'].value_counts(normalize=True))\n","\n","print('\\nProportion of weekend trips by time of day:\\n')\n","print(wknd_trips.groupby(['member_casual'])['time_of_day'].value_counts(normalize=True))\n","\n","print('\\nProportion of weekend trips by season:\\n')\n","print(wknd_trips.groupby(['member_casual'])['season'].value_counts(normalize=True))"]},{"cell_type":"markdown","id":"af4e3fe6","metadata":{"papermill":{"duration":0.012217,"end_time":"2024-08-12T20:38:44.111367","exception":false,"start_time":"2024-08-12T20:38:44.09915","status":"completed"},"tags":[]},"source":["### Analysis of weekday trips:"]},{"cell_type":"code","execution_count":20,"id":"7c4809ef","metadata":{"_kg_hide-input":true,"execution":{"iopub.execute_input":"2024-08-12T20:38:44.138179Z","iopub.status.busy":"2024-08-12T20:38:44.137842Z","iopub.status.idle":"2024-08-12T20:38:46.648134Z","shell.execute_reply":"2024-08-12T20:38:46.647212Z"},"papermill":{"duration":2.526564,"end_time":"2024-08-12T20:38:46.65044","exception":false,"start_time":"2024-08-12T20:38:44.123876","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Percentage of total trips using single station:\n","\n","member_casual\n","casual    0.089348\n","member    0.036904\n","Name: single_station, dtype: float64\n","\n","Average trip duration in minutes:\n","\n","member_casual\n","casual    18.254662\n","member    11.399383\n","Name: duration, dtype: float64\n","\n","Proportion of weekend trips by bike type:\n","\n","member_casual  rideable_type\n","casual         classic_bike     0.606692\n","               electric_bike    0.373338\n","               docked_bike      0.019970\n","member         classic_bike     0.674034\n","               electric_bike    0.325966\n","Name: proportion, dtype: float64\n","\n","Proportion of weekend trips by time of day:\n","\n","member_casual  time_of_day\n","casual         evening        0.461584\n","               afternoon      0.349472\n","               morning        0.139081\n","               night          0.049863\n","member         evening        0.442290\n","               afternoon      0.281735\n","               morning        0.246308\n","               night          0.029667\n","Name: proportion, dtype: float64\n","\n","Proportion of weekend trips by season:\n","\n","member_casual  season\n","casual         summer    0.446707\n","               spring    0.276753\n","               fall      0.193888\n","               winter    0.082652\n","member         summer    0.342059\n","               spring    0.266375\n","               fall      0.244949\n","               winter    0.146617\n","Name: proportion, dtype: float64\n"]}],"source":["# Analysis after removing outliers\n","## Creating dataframe of weekend trips for analysis\n","wkdy_trips = trips_clean.loc[trips_clean['weekend']==False]\n","\n","## Analysis of weekend trips\n","print('Percentage of total trips using single station:\\n')\n","print(wkdy_trips.groupby(['member_casual'])['single_station'].mean())\n","\n","print('\\nAverage trip duration in minutes:\\n')\n","print(wkdy_trips.groupby(['member_casual'])['duration'].mean())\n","\n","print('\\nProportion of weekend trips by bike type:\\n')\n","print(wkdy_trips.groupby(['member_casual'])['rideable_type'].value_counts(normalize=True))\n","\n","print('\\nProportion of weekend trips by time of day:\\n')\n","print(wkdy_trips.groupby(['member_casual'])['time_of_day'].value_counts(normalize=True))\n","\n","print('\\nProportion of weekend trips by season:\\n')\n","print(wkdy_trips.groupby(['member_casual'])['season'].value_counts(normalize=True))"]},{"cell_type":"code","execution_count":21,"id":"17979e08","metadata":{"execution":{"iopub.execute_input":"2024-08-12T20:38:46.67836Z","iopub.status.busy":"2024-08-12T20:38:46.678076Z","iopub.status.idle":"2024-08-12T20:38:51.241749Z","shell.execute_reply":"2024-08-12T20:38:51.240708Z"},"papermill":{"duration":4.579648,"end_time":"2024-08-12T20:38:51.243878","exception":false,"start_time":"2024-08-12T20:38:46.66423","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 240000 entries, 315390 to 119994\n","Data columns (total 18 columns):\n"," #   Column              Non-Null Count   Dtype  \n","---  ------              --------------   -----  \n"," 0   ride_id             240000 non-null  object \n"," 1   rideable_type       240000 non-null  object \n"," 2   start_station_name  240000 non-null  object \n"," 3   end_station_name    240000 non-null  object \n"," 4   start_lat           240000 non-null  float64\n"," 5   start_lng           240000 non-null  float64\n"," 6   end_lat             240000 non-null  float64\n"," 7   end_lng             240000 non-null  float64\n"," 8   member_casual       240000 non-null  object \n"," 9   duration            240000 non-null  float64\n"," 10  month               240000 non-null  int32  \n"," 11  year                240000 non-null  int32  \n"," 12  weekday             240000 non-null  int32  \n"," 13  hour                240000 non-null  int32  \n"," 14  weekend             240000 non-null  bool   \n"," 15  single_station      240000 non-null  bool   \n"," 16  season              240000 non-null  object \n"," 17  time_of_day         240000 non-null  object \n","dtypes: bool(2), float64(5), int32(4), object(7)\n","memory usage: 27.9+ MB\n","None\n"]}],"source":["# Creating sample DataFrame for visualization\n","trips_sample = trips_clean.sample(240000)\n","trips_sample = trips_sample[['ride_id', 'rideable_type', 'start_station_name', 'end_station_name', 'start_lat', 'start_lng', 'end_lat', 'end_lng', \n","                             'member_casual', 'duration', 'month', 'year', 'weekday', 'hour', 'weekend', 'single_station', 'season', 'time_of_day']]\n","\n","## Exporting combined sample set for visualization\n","trips_sample.to_csv('trips_sample.csv', index=False)\n","\n","print(trips_sample.info())"]},{"cell_type":"markdown","id":"637b4b17","metadata":{"papermill":{"duration":0.012851,"end_time":"2024-08-12T20:38:51.270434","exception":false,"start_time":"2024-08-12T20:38:51.257583","status":"completed"},"tags":[]},"source":["# Key Findings and Supporting Visualizations:\n","\n","### Trips with negative durations:\n","\n","- A small number (**69 total**) of trips showing negative durations.\n","\n","- **Casual riders** account for higher proportions of negative durations (**55.07%**) than total trips (34.17%).\n","\n","\n","### Trips lasting longer than 90 minutes:\n","\n","- **1.32%** of total trips are longer than 90 minutes.\n","\n","- **Casual riders** account for **87.07%** of total trips longer than 90 minutes.\n","\n","- Long trips more likely:\n","\n","    -- On **weekend days**\n","    -- during the **summer**\n","    -- by **casual riders**\n","    -- in the **evening**.\n","\n","\n","### Values not propogating correctly when collected:\n","\n","- Variables with null values include 'start_station_name', 'start_station_id', 'end_station_id', and 'end_station_name'.\n","\n","\n","### Summary of outliers:\n","**Outliers** are defined as trips that have a *duration greater than 3.5 standard deviations from the mean.*\n","\n","- **82.23%** of total trips greater than 3.5 standard deviations were by **casual riders**.\n","\n","- **84.72%** of total trips greater than 3.5 standard deviations were on **classic bikes**.\n","\n","- **56.53%** of total trips greater than 3.5 standard deviations were on the **weekend**.\n","\n","\n","## Additional Summary Statistics:\n","\n","### Proportion of Total Trips:\n","\n","- Casual Riders: 34.95%\n"," \n","- **Annual Members: 65.05%**\n"," \n","### Avg. Trip Duration:\n","\n","- Total Trips: 14.84 minutes\n","\n","- **Casual Riders: 20.34 minutes**\n","\n","- Annual Members: 11.88 minutes\n","\n","### Single Station Trips:\n","\n","- Total Trips: 6.05%\n","\n","- **Casual Riders: 9.76%**\n","\n","- Annual Members: 4.05%\n","\n","### Weekend Trips:\n","\n","- Total Trips: 43.04%\n","\n","- **Casual Riders: 52.69%**\n","\n","- Annual Members: 37.85%\n","\n","### Docked-Bike Trips:\n","\n","- Total Trips: 0.07%\n","\n","- **Casual Riders: 2.10%**\n","\n","- Annual Members: 0.00%\n","\n","### Summer Trips:\n","\n","- Total Trips: 39.66%\n","\n","- **Casual Riders: 46.46%**\n","\n","- Annual Members: 36.00%\n","\n","### Winter Trips:\n","\n","- Total Trips: 11.42%\n","\n","- Casual Riders: 7.24%\n","\n","- **Annual Members: 13.67%**\n","\n","### Afternoon Trips:\n","\n","- Total Trips: 37.23%\n","\n","- **Casual Riders: 42.77%**\n","\n","- Annual Members: 34.26%\n","\n","### Morning Trips:\n","\n","- Total Trips: 17.68%\n","\n","- Casual Riders: 11.27%\n","\n","- **Annual Members: 21.13%**"]},{"cell_type":"markdown","id":"dae2e911","metadata":{"papermill":{"duration":0.01347,"end_time":"2024-08-12T20:38:51.296847","exception":false,"start_time":"2024-08-12T20:38:51.283377","status":"completed"},"tags":[]},"source":["# Top 3 Recommendations Based on Analysis:\n","1.) Use phone app to start and end trips.  \n","\n","- Better access to users for promotions and marketing campaigns  \n","- Minimizes null values and ensures greater consistency in data collection process.\n","\n","2.) Offer a discount program as an alternative in between the current offerings.\n","\n","- Lower pass price for frequent and repeating users.\n","- Creates option for satisfied users that are unable to justify full membership.\n","- Encourages repeat users that are not annual members.\n","- Include referral program to increase promotional efficiency.\n","\n","3.) Establish uniform formatting of data collection.  \n"," \n","- Facilitates more insightful analysis.\n","- Increases effectiveness of marketing, operation, and pricing strategies. "]}],"metadata":{"kaggle":{"accelerator":"gpu","dataSources":[{"datasetId":5511134,"sourceId":9128272,"sourceType":"datasetVersion"}],"dockerImageVersionId":30747,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":110.463731,"end_time":"2024-08-12T20:38:52.832306","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-08-12T20:37:02.368575","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}